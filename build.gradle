plugins {
	id 'java'
	id 'java-library'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}
jacoco {
	toolVersion = '0.8.10'
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				// минимальное покрытие тестами в процентах
				minimum = 0.50
			}
		}
	}
}



repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'org.postgresql:postgresql:42.6.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation'org.projectlombok:lombok:1.18.26'
	compileOnly('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.jacoco:org.jacoco.core:0.8.10'

}
jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.required = true
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
